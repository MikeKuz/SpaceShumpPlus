using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Enemy_1 : Enemy
{
    [Header("Set in Inspector: Enemy_1")]
    //Число секунд полного цикла синусоиды
    public float waveFrequency = 2;
    //Ширина синусоиды
    public float waveWidth = 4;
    public float waveRotY=45;
    public new readonly int score = 13;

    protected override int Score
    {
        get => base.Score = score;
    }

    private float x0;
    private float birthTime;

    //Метод start хорошо подходит для наших целей потому что не используется суперклассом Enemy
    void Start()
    {
        //Установить начальную координату Х объекта Enemy_1
        x0 = pos.x;

        birthTime = Time.time;
    }

    //Переопределить функицю Move суперкласса Enemy
    public override void Move()
    {
        //Так как pos - это свойство нельзя напрямую изменить pos.x 
        //поэтому получим pos в виде вектора Vector3, доступного для изменения
        Vector3 tempPos = pos;

        //значение theta изменяется с течением времени
        float age = Time.time - birthTime;
        float theta = Mathf.PI * 2 * age / waveFrequency;
        float sin = Mathf.Sin(theta);
        tempPos.x = x0 + waveWidth * sin;
        pos = tempPos;

        //повернуть немного относительно оси Y
        Vector3 rot = new Vector3(0, sin * waveRotY, 0);
        this.transform.rotation = Quaternion.Euler(rot);

        //base.Move() обрабатывает движение вниз, вдоль оси Y
        base.Move();

        //print(bndCheck.isOnScreen);

    }

}
